//  Various DataBase APIs go here// Chrome Storage APIvar chromeStorageAPI = (function () {    var storageArea = chrome.storage.sync;    return {        get: function (keys, callback) {            storageArea.get(keys, callback);        },        set: function (keyValuePairObject, callback) {            storageArea.set(keyValuePairObject, callback);        }    };})();/* Generic Storage API Provider. General interface of an StorageAPI would be as follows get the stored value -- async call, use the callback to process the returned result. keys - string or array of strings/object callback - it should be like function(items){...}; items --> Object with stuffs in their key-value mappings. get : function(keys, callback) set the key value pairs present in the keyValuePairObject, async call. keyValuePairObject - object which gives each key/value pair to update storage with callback should be like function() { ... }; set : function(keyValuePairObject, callback) */var storageAPIProvider = (function () {    return {        getStorageAPI: function (type) {            if (type === SokobanUtil.storageType.CHROME_API)                return chromeStorageAPI;            return null;        }    };})();// state of the level.function LevelState(levelNo) {    this.levelNo = levelNo;    this.solutionMoves = -1; // default moves.}LevelState.prototype.setSolutionMoves = function (moves) {    this.solutionMoves = moves;};function StorageHelper(storageType) {    var storageAPI = storageAPIProvider.getStorageAPI(storageType);    var levelKeyPrefix = 'levelInfo';    this.storeLevelState = function (levelState) {        var key = levelKeyPrefix + levelState.levelNo;        // create the key : value object as required for storing.        var keyValueObject = {};        keyValueObject[key] = levelState;        storageAPI.set(keyValueObject, function () {            console.log('state of the level - ' + levelState.levelNo + ' is stored successfully');        });    };    this.getLevelState = function (levelNo, callback) {        var key = levelKeyPrefix + levelNo;        storageAPI.get(key, function (result) {            callback(result[key]);        });    };}